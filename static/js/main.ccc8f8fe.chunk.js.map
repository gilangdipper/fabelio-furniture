{"version":3,"sources":["component/ui-components/InputBox.tsx","component/ui-components/Checkbox.tsx","component/ui-components/SelectMultiple.tsx","component/SearchBox.tsx","component/ui-components/Card.tsx","component/FurnitureCards.tsx","container/SearchPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Wrapper","styled","div","InputBox","placeholder","value","onChange","className","type","Checkbox","name","checked","MultipleSelectWrapper","props","optionsVisible","css","SelectMultiple","options","wrapperRef","useRef","useState","setOptionsVisible","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","onClick","ref","map","item","index","key","SearchBoxWrapper","FILTERS","defaultSelectOptions","deliveryTime","label","FILTER_NAME_MAP","furnitureStyle","SearchBox","furnitureStyles","filters","setFilters","selectOptions","undefined","search","e","inputText","prevState","filterName","isChecked","CardWrapper","Card","price","description","furniture_style","delivery_time","parseInt","toLocaleString","join","FrunitureCardsWrapper","FrunitureCards","products","product","DELIVERY_TIME_CALC_MAP","time","getFilterKeys","Object","keys","filter","getProductsFiltered","prevFilters","firstValue","secondValue","JSON","stringify","length","includes","furnitureStyleKeys","some","deliveryTimeKeys","defaultFilters","SearchPage","prevFiltersState","usePrevious","productsFiltered","FurnitureCards","App","setProducts","setFurnitureStyles","a","fetch","response","json","result","furniture_styles","fetchData","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ccc8f8fe.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  background-color: #0f6cc8;\n\n  input {\n    width: 100%;\n    border: none;\n    background-color: transparent;\n    color: #ffffff;\n    font-size: 18px;\n    font-weight: bold;\n    border-bottom: 1px solid #94a8bf;\n    padding-bottom: 8px;\n\n    &::placeholder {\n      color: #ffffff;\n    }\n    \n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\ntype Props = {\n  placeholder: string,\n  value: string,\n  onChange: () => void\n};\n\nconst InputBox: FC<Props> = ({ placeholder, value, onChange }) => (\n  <Wrapper className=\"input-box\">\n    <input\n      type=\"text\"\n      placeholder={placeholder}\n      onChange={onChange}\n      value={value}\n    />\n  </Wrapper>\n);\n\nexport default InputBox;\n","import React from 'react';\n\ntype Props = {\n  name: string,\n  checked: boolean,\n  onChange: () => void\n};\n\nconst Checkbox: React.FC<Props> = ({ name, checked = false, onChange }) => (\n  <input type=\"checkbox\" name={name} checked={checked} onChange={onChange} />\n);\n\nexport default Checkbox;\n","import React, { FC, useState, useRef, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport Checkbox from './Checkbox';\n\nconst MultipleSelectWrapper = styled.div`\n  display: block;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  cursor: pointer;\n  background-color: #ffffff;\n\n  .placeholder {\n    font-size: 16px;\n    padding: 4px 10px;\n    font-weight: 500;\n  }\n\n  .options-wrapper {\n    position: absolute;\n    width: 100%;\n\n    .options {\n      height: 0;\n      width: 100%;\n      max-height: 0;\n      overflow: hidden;\n      overflow-y: scroll;\n      background-color: #ffffff;\n      -webkit-transition: max-height .5s ease;\n      display: flex;\n      flex-flow: column;\n\n      ${props => props.optionsVisible &&\n        css`\n          height: auto;\n          max-height: 200px;\n          -webkit-transition: max-height .5s ease;\n          box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.15);\n          border-style: solid;\n          border-width: 0 1px 1px 1px;\n          border-color: #d2d6da;\n        `\n      }\n\n      label {\n        padding: 8px;\n        display: flex;\n        font-weight: 500;\n        font-size: 12px;\n        cursor: pointer;\n\n        input {\n          margin-left: auto;\n          cursor: pointer;\n        }\n      }\n    }\n  }\n`;\n\ntype Props = {\n  onChange: () => void,\n  options: object[],\n  checked: object,\n  placeholder: string\n};\n\nconst SelectMultiple: FC<Props> = ({ options, placeholder, checked, onChange }) => {\n  const wrapperRef = useRef(null);\n  const [optionsVisible, setOptionsVisible] = useState(false);\n  const handleClickOutside = (event) => {\n    if (wrapperRef && !wrapperRef.current.contains(event.target)) {\n      setOptionsVisible(false);\n    }\n    return;\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  return (\n    <MultipleSelectWrapper\n      optionsVisible={optionsVisible}\n      onClick={() => setOptionsVisible(true)}\n      ref={wrapperRef}\n      className=\"multiple-select-wrapper\"\n    >\n      <div className=\"placeholder\">{placeholder}</div>\n      <div className=\"options-wrapper\">\n        <div className=\"options\">\n          {options.map((item, index) => \n            <label key={index}>\n              {item.name}\n              <Checkbox\n                name={item.name}\n                checked={checked[item.name]}\n                onChange={onChange}\n              />\n            </label>)}\n        </div>\n      </div>\n    </MultipleSelectWrapper>\n  );\n};\n\nexport default SelectMultiple;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport InputBox from './ui-components/InputBox';\nimport SelectMultiple from './ui-components/SelectMultiple';\n\nconst SearchBoxWrapper = styled.div`\n  width: 100%;\n  background-color: #0f6cc8;\n  padding: 16px;\n  display: flex;\n  flex-flow: row wrap;\n\n  .row {\n    flex: 0 0 100%;\n    margin-bottom: 14px;\n    display: flex;\n\n    .multiple-select-wrapper {\n      &:first-child {\n        margin-right: 8px;\n      }\n      &:last-child {\n        margin-left: 8px;\n      }\n    }\n\n    .input-box {\n      width: calc(50% - 8px);\n    }\n\n    @media only screen and (max-width: 425px) {\n      .input-box {\n        width: 100%;\n      }\n    }\n  }\n`;\n\nconst FILTERS = [ \"furnitureStyle\", \"deliveryTime\" ];\nconst defaultSelectOptions = {\n  deliveryTime: [\n    {\n      name: 'one-week',\n      label: '1 Week',\n    },\n    {\n      name: 'two-weeks',\n      label: '2 Weeks',\n    },\n    {\n      name: 'one-month',\n      label: '1 Month',\n    },\n    {\n      name: 'more',\n      label: 'More',\n    }\n  ]\n};\nconst FILTER_NAME_MAP = {\n  furnitureStyle: \"Furniture Style\",\n  deliveryTime: \"Delivery Time\"\n};\n\ntype Props = {\n  furnitureStyles: string[],\n  filters: object,\n  setFilters: () => void\n}\n\nconst SearchBox: FC<Props> = ({ furnitureStyles, filters, setFilters }) => {\n  const selectOptions = {\n    ...defaultSelectOptions,\n    ...(furnitureStyles !== undefined && {\n      furnitureStyle: furnitureStyles.map(item => ({ name: item, label: item }))\n    })\n  };\n\n  const handleInputChange = e => {\n    const inputText = e.target.value\n    setFilters(prevState => ({ ...prevState, search: inputText }));\n  };\n\n  const renderMultipleSelect = (filterName, index) => {\n    const handleSelectChange = (e) => {\n      const item = e.target.name;\n      const isChecked = e.target.checked;\n      setFilters(prevState => ({\n        ...prevState,\n        [filterName]: {\n          ...prevState[filterName],\n          [item]: isChecked\n        }\n      }));\n    };\n\n    return (\n      <SelectMultiple\n        key={index}\n        placeholder={FILTER_NAME_MAP[filterName]}\n        options={selectOptions[filterName]}\n        onChange={handleSelectChange}\n        checked={filters[filterName]}\n      />\n    );\n  };\n\n  return (\n    <SearchBoxWrapper>\n      <div className=\"row\">\n        <InputBox\n          placeholder=\"Search Furniture\"\n          value={filters.search}\n          onChange={handleInputChange}\n        />\n      </div>\n      <div className=\"row\">\n        {FILTERS.map(renderMultipleSelect)}\n      </div>\n    </SearchBoxWrapper>\n  );\n}\n\nexport default SearchBox;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nconst CardWrapper = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  border-radius: 6px;\n  width: auto;\n  box-shadow: 0 2px 2px 0 rgba(0,0,0,0.15);\n  padding: 16px;\n\n  .product-name {\n    flex: 0 0 70%;\n    font-size: 18px;\n    font-weight: 700;\n    margin-bottom: 8px;\n  }\n  .product-price {\n    flex: 0 0 30%;\n    color: #ff9a07;\n    font-size: 14px;\n    text-align: right;\n  }\n  .product-description {\n    flex: 0 0 100%;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    color: #626262;\n    font-size: 12px;\n    margin-bottom: 8px;\n  }\n  .product-style {\n    flex: 0 0 100%;\n    font-size: 14px;\n    color: #6aa2dc;\n    margin-bottom: 8px;\n  }\n  .product-delivery-time {\n    flex: 0 0 100%;\n    font-size: 14px;\n    font-weight: 700;\n    text-decoration: underline;\n    color: #0e6cc8;\n    text-align: right;\n  }\n`;\n\ntype Props = {\n  name: string,\n  price: string,\n  description: string,\n  furniture_style: string[],\n  delivery_time: string\n};\n\nconst Card: FC<Props> = ({ \n  name,\n  price,\n  description,\n  furniture_style,\n  delivery_time\n}) => (\n  <CardWrapper>\n    <div className=\"product-name\">{name}</div>\n    <div className=\"product-price\">{`IDR ${parseInt(price).toLocaleString('id-ID')}`}</div>\n    <div className=\"product-description\">{description}</div>\n    <div className=\"product-style\">{furniture_style.join(', ')}</div>\n    <div className=\"product-delivery-time\">{`${delivery_time} days`}</div>\n  </CardWrapper>\n);\n\nexport default Card;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\nimport Card from './ui-components/Card';\n\nconst FrunitureCardsWrapper = styled.div`\n  width: calc(100% - 2px);\n  padding: 16px;\n  display: flex;\n  flex-flow: row wrap;\n  border: 1px solid #000000;\n\n  .card-wrapper {\n    flex: 0 0 calc(50% - 8px);\n    margin-bottom: 16px;\n\n    &:nth-child(odd) {\n      margin-right: 8px;\n    }\n    &:nth-child(even) {\n      margin-left: 8px;\n    }\n  }\n\n  @media only screen and (max-width: 425px) {\n    border: none;\n\n    .card-wrapper {\n      flex: 0 0 100%;\n\n      &:nth-child(n) {\n        margin: 0 0 16px 0;\n      }\n    }\n  }\n`;\n\ntype Props = {\n  products: Object[]\n};\n\nconst FrunitureCards: FC<Props> = ({ products }) => (\n  <FrunitureCardsWrapper>\n    {products.map((product, index) =>\n      <div className=\"card-wrapper\" key={index}>\n        <Card {...product} />\n      </div>)}\n  </FrunitureCardsWrapper>\n);\n\nexport default FrunitureCards;\n","import React, { FC, useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport SearchBox from '../component/SearchBox';\nimport FurnitureCards from '../component/FurnitureCards';\n\nconst Wrapper = styled.div`\n  display: block;\n  width: 100%;\n  max-width: 768px;\n  margin: 0 auto;\n`;\n\nconst DELIVERY_TIME_CALC_MAP = {\n  \"one-week\": (time) => time <= 7,\n  \"two-weeks\": (time) => time <= 14 && time > 7,\n  \"one-month\": (time) => time <= 30 && time > 14,\n  \"more\": (time) => time > 30\n};\n\nconst isEqual = (firstValue, secondValue) =>\n  JSON.stringify(firstValue) === JSON.stringify(secondValue);\n\nconst getFilterKeys = (filters, filterName) => \n  Object.keys(filters[filterName]).filter(item => filters[filterName][item]);\n\nconst getProductsFiltered = (filters, prevFilters, products) => {\n  if (!isEqual(filters, prevFilters) && prevFilters !== undefined) {\n    if (filters.search.length > 0) {\n      products = products.filter(({ name }) => name.includes(filters.search))\n    }\n\n    const furnitureStyleKeys = getFilterKeys(filters, \"furnitureStyle\");\n    if (furnitureStyleKeys.length > 0) {\n      products = products.filter(({ furniture_style }) =>\n        furniture_style.some(item => furnitureStyleKeys.includes(item)));\n    }\n\n    const deliveryTimeKeys = getFilterKeys(filters, \"deliveryTime\");\n    if (deliveryTimeKeys.length > 0) {\n      products = products.filter(({ delivery_time }) =>\n        deliveryTimeKeys.some(item =>\n          DELIVERY_TIME_CALC_MAP[item](parseInt(delivery_time))));\n    }\n  }\n\n  return products;\n};\n\nconst usePrevious = (value) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst defaultFilters = {\n  search: \"\",\n  furnitureStyle: {},\n  deliveryTime: {}\n};\n\ntype Props = {\n  products: Object[],\n  furnitureStyles: string[]\n};\n\nconst SearchPage: FC<Props> = ({ products, furnitureStyles }) => {\n  const [filters, setFilters] = useState(defaultFilters);\n  const prevFiltersState = usePrevious(filters);\n  const productsFiltered = getProductsFiltered(filters, prevFiltersState, products);  \n  \n  return (\n    <Wrapper>\n      <SearchBox\n        furnitureStyles={furnitureStyles}\n        filters={filters}\n        setFilters={setFilters}\n      />\n      <FurnitureCards products={productsFiltered} />\n    </Wrapper>\n  );\n}\n\nexport default SearchPage;\n","import React, { FC, useEffect, useState } from 'react';\nimport SearchPage from './container/SearchPage';\n\nconst App: FC<any> = () => {\n  const [products, setProducts] = useState([]);\n  const [furnitureStyles, setFurnitureStyles] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          'http://www.mocky.io/v2/5c9105cb330000112b649af8,'\n        );\n        const result = await response.json();\n\n        setProducts(result.products);\n        setFurnitureStyles(result.furniture_styles);\n      } catch(error) {\n        setProducts([]);\n        setFurnitureStyles([]);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <SearchPage products={products} furnitureStyles={furnitureStyles}/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}